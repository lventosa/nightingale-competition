qqnorm(resid2, col="tomato", main="Quantile-Comparison Plot")
qqline(resid2, lwd=2, lty=3)
shapiro.test(resid2)
#Average Size Army vs Other Causes:
cor(data$avg_size_army, data$other)
reg3 <- lm(avg_size_army ~ other, data=data)
coeftest(reg3, NeweyWest(reg3))
#Residuals:
resid3 <- as.numeric(reg3$residuals)
adjusted.values3 <- fitted(reg3)
plot(adjusted.values3, resid3, main="Residual Plot", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid3, col="tomato", main="Quantile-Comparison Plot")
qqline(resid3, lwd=2, lty=3)
shapiro.test(resid3)
#Since the correlation coefficient is -0.16, these two variables move in opposite directions. That is, when one variable increases, the other one is expected to decrease.
#Again, only the intercept is statistically significant in this regression model. Thus, deaths by causes other than injuries and wounds and symotic diseases do not appear to have a significant impact on the average size of the army.
#The residuals do not look normally distributed. Moreover, the Shapiro test shows that we must reject the null hypothesis of normality. Consequently, we can state that this regression model is not very reliable.
reg4 <- lm(avg_size_army ~ data$zymotic+data$injuries+data$other, data=data)
coeftest(reg4, NeweyWest(reg4))
#Residuals:
resid4 <- as.numeric(reg4$residuals)
adjusted.values4 <- fitted(reg4)
plot(adjusted.values4, resid4, main="Residual Plot", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid4, col="tomato", main="Quantile-Comparison Plot")
qqline(resid4, lwd=2, lty=3)
shapiro.test(resid4)
#Average Size Army vs. Total Deaths:
cor(data$avg_size_army, data$total_deaths)
reg5 <- lm(avg_size_army ~ total_deaths, data=data)
coeftest(reg5, NeweyWest(reg5))
#Residuals:
resid5 <- as.numeric(reg5$residuals)
adjusted.values5 <- fitted(reg5)
plot(adjusted.values5, resid5, main="Residual Plot", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid5, col="tomato", main="Quantile-Comparison Plot")
qqline(resid5, lwd=2, lty=3)
shapiro.test(resid5)
#We wanted to compare the results of the previous regression model with the results of regressing the average size of the army against total deaths (aggregated in the new variable we created).
#The correlation between total deaths and the average size of the army is negative and not very strong.
#As for the regression coefficients, only the intercept is statistically significant and thus, total deaths do not have a statistically signifcant effect on the average size of the army. Nonetheless, this is not a very reliable model since we reject the null hypotheses of normally distributed residuals.
#Zymotic Diseases vs. Time Period:
cor(data$zymotic, data$time_period)
reg6 <- lm(zymotic ~ time_period, data=data)
coeftest(reg6, NeweyWest(reg6))
#Residuals:
resid6 <- as.numeric(reg6$residuals)
adjusted.values6 <- fitted(reg6)
plot(adjusted.values6, resid6, main="Residual Plot", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid6, col="tomato", main="Quantile-Comparison Plot")
qqline(resid6, lwd=2, lty=3)
shapiro.test(resid6)
#Negative correlation between deaths by zymotic diseases and time period mean that over time we expect the amount of deaths by zymotic diseases to decrease, which by one of the plots of section 2 this is true from period 9 (January 1855) onwards.
#Only the intercept of the regression model is significant. Hence, the time period does not have a significant effect on the number of deaths by zymotinc diseases. Morover, this model is not very reliable as residuals are not normally distributed.
#Deaths by Injuries vs. Time Period:
cor(data$injuries, data$time_period)
reg7 <- lm(injuries ~ time_period, data=data)
coeftest(reg7, NeweyWest(reg7))
#Residuals:
resid7 <- as.numeric(reg7$residuals)
adjusted.values7 <- fitted(reg7)
plot(adjusted.values7, resid7, main="Residual Plot", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid7, col="tomato", main="Quantile-Comparison Plot")
qqline(resid7, lwd=2, lty=3)
shapiro.test(resid7)
#Time period and the amount of deaths by injuries are negatively correlated, even though the correlation coefficient i very low and near to 0.
#Regarding the regression model, neither the intercept nor the estimated coefficient for the time period variable are statistically significant. This allows us to conclude that deaths by injuries are not significantly affected by the time period. Moreover, this is not a very trustworthy model as residuals ar not normally distributed, judging by the plots and the Shapiro test.
#Other Causes vs. Time Period:
cor(data$other, data$time_period)
reg8 <- lm(other ~ time_period, data=data)
coeftest(reg8, NeweyWest(reg8))
#Residuals:
resid8 <- as.numeric(reg8$residuals)
adjusted.values8 <- fitted(reg8)
plot(adjusted.values8, resid8, main="Residual Plot", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid8, col="tomato", main="Quantile-Comparison Plot")
qqline(resid8, lwd=2, lty=3)
shapiro.test(resid8)
#The correlation coefficient is negative, which means that over time, fewer deaths by causes that are not injuries nor zymotic diseases are expected. However, the plots in section 2 tell another story.
#Just as the previous model, none of the coefficients estimated are statistically significant and the residuals are not normally distributed.
#Total Deaths vs. Time Period
cor(data$total_deaths, data$time_period)
reg9 <- lm(total_deaths ~ time_period, data=data)
coeftest(reg9, NeweyWest(reg9))
#Residuals:
resid9 <- as.numeric(reg9$residuals)
adjusted.values9 <- fitted(reg9)
plot(adjusted.values9, resid9, main="Residual Plot", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid9, col="tomato", main="Quantile-Comparison Plot")
qqline(resid9, lwd=2, lty=3)
shapiro.test(resid9)
#A negative correlation coefficient between these two variables, even though it is not close to 1 in absolute value, shows that total deaths are expected to decrease over time. Again, this is not what the plots shown earlier tell.
#Once again, only the intercept is statistically significant. Thus, the amount of deaths (by all causes) cannot be explained by the time period. In addition, non-normally distributed residuals tell us that this is model si not very trustworthy.
#For the following model we are interested in total deaths in terms of previous values of the same variable. That is, we want to lag the variable and regress total death on its lags to look for significance. The first step, though, is assess for stationarity of the series.
data_plot_5 <- data.frame(
Time=data$time_period,
Total=data$total_deaths)
dygraph(data_plot_5, main="Total deaths (all causes aggregated)")
#The series depicted does not seem very stationary. Nonetheless, we counduct a Dickey-Fuller test.
adf.test(data$total_deaths)
#As we cannot reject the null hypotheses of non-stationarity, we will differenciate the data in order to obtain stationarity and be able to run an autoregressive model:
total_deaths_diff <- diff(data$total_deaths)
adf.test(total_deaths_diff)
#By looking at the p-value returned by the test, we can state that the differenced series is not stationary at a 0.05 significance. We differenciate again:
total_deaths_diff2 <- diff(total_deaths_diff)
adf.test(total_deaths_diff2)
#Now that we have finally obtained a stationary series, we can perform an autoregressive model.
#Checking how many lags we should include:
acf(total_deaths_diff2, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Autocorrelation function total deaths")
pacf(total_deaths_diff2, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Parcial autocorrelation function total deaths")
#None of the lags are significant so, even though after differencing our data twice, it does not make sense to construct an ARIMA model. As the data differenced only once is almost stationary, we can check if it would make mmore sense to construct an ARIMA model in such case:
acf(total_deaths_diff, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Autocorrelation function total deaths")
pacf(total_deaths_diff, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Parcial autocorrelation function total deaths")
#Again, no lags are significant and thus we will not be able to construct a good autoregressive model in this case.
#Drama: amb la data no estacionària no es pot aplicar el model autoregressiu però un cop la diferencio i es converteix en estacionària (total_deaths_diff2) o quasi-estacionària (total_death_diff) no hi ha cap lag (potencials regressors) que semblin ser significatius. Per tant, a la regressió tampoc ho seran --> No afegim aquests dos models? Jo deixaria el raonament aquest explicant why not (el que ja he explicat més amunt) --> Esborrem tot lo de sota?
tra_death <- data.frame(y=data$total_deaths[2:L], lag1=data$total_deaths[1:(L-1)])
cor(tra_death$y, tra_death$lag1)
reg10 <- lm(y ~ lag1, data=tra_death)
summary(reg10)
coeftest(reg10, NeweyWest(reg10))
resid10 <- as.numeric(reg10$residuals)
qqnorm(resid10, col="tomato", main="Model 10: Total Deaths vs. Total Deaths Lagged")
qqline(resid10, lwd=2, lty=3)
#Una altra manera de crear models autoregressius:
reg11 <- arima(data$total_deaths, c(1,0,0))
coeftest(reg11)
resid11 <- as.numeric(reg11$residuals)
qqnorm(resid11, col="tomato", main="Model 11: Total Deaths vs. Total Deaths Lagged AR(1)")
qqline(resid11, lwd=2, lty=3)
#Total Deaths vs. Time Period
cor(data$total_deaths, data$time_period)
reg9 <- lm(total_deaths ~ time_period, data=data)
coeftest(reg9, NeweyWest(reg9))
#Residuals:
resid9 <- as.numeric(reg9$residuals)
adjusted.values9 <- fitted(reg9)
plot(adjusted.values9, resid9, main="Residual Plot", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid9, col="tomato", main="Quantile-Comparison Plot")
qqline(resid9, lwd=2, lty=3)
shapiro.test(resid9)
#A negative correlation coefficient between these two variables, even though it is not close to 1 in absolute value, shows that total deaths are expected to decrease over time. Again, this is not what the plots shown earlier tell.
#Once again, only the intercept is statistically significant. Thus, the amount of deaths (by all causes) cannot be explained by the time period. In addition, non-normally distributed residuals tell us that this is model si not very trustworthy.
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
rm(list=ls())
#Libraries used across the whole project:
library(readxl)
library(dplyr)
library(tidyverse)
library(gt)
library(dygraphs)
library(formattable)
library(xts)
library(lmtest)
library(tseries)
library(sandwich)
library(forecast)
library(ResourceSelection)
library(pROC)
library(reshape2)
#Importing dataset:
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
#Basic information:
head(data)
#Dimensions of the dataset:
dim(data)
#Variables:
sapply(data, class)
summary(data)
#Making everything more readable and column names more manageable:
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Checking missing values:
colSums(is.na(data))
#Checking outliers:
par(mfrow=c(1,3))
boxplot(data$injuries, col="lightgoldenrod", main="Deaths by injuries")
boxplot(data$zymotic, col="mistyrose", main="Deaths by zymotic disease")
boxplot(data$other, col="powderblue", main="Deaths by other causes")
data[17,1] <- "Aug 1855" #We modify this entry as in the original dataset it appeared as Aug_1855.
#Creating a numeric variable to account for time period:
L <- nrow(data)
time_period <- seq(0,(L-1)) #Changing from 1 to L
data$time_period <- time_period
data <- as.data.frame(data)
time_vars <- select(data, month, time_period)
time_vars %>%
gt() %>%
tab_header(title = md("**Time periods**"), subtitle = md("Equivalence between both variables"))
#Adding new variables to the dataset:
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Agreggated deaths (all causes) per month
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths over time
deaths_evol <- select(data, month, total_deaths, time_period)
ordered_deaths <- deaths_evol %>%
arrange(desc(deaths_evol$total_deaths)) #Months arranged from higher to lower number of deaths
#Visualizing in a colorful data table the changes performed:
table_deaths <- data.frame(
Month = ordered_deaths$month,
TotalDeaths = ordered_deaths$total_deaths,
TimePeriod = ordered_deaths$time_period)
formattable(table_deaths, list(
Month = color_tile("lightblue", "lightpink4"),
TotalDeaths = color_bar("grey")))
par(mfrow=c(2,2))
plot(data$avg_size_army, type="line", main="Average Size Army", xlab="Time", ylab="Average Size Army", col="azure4")
plot(data$zymotic, type="line", main="Zymotic Diseases", xlab="Time", ylab="Zymotic Diseases", col="firebrick4")
plot(data$injuries, type="line", main="Injuries", xlab="Time", ylab="Injuries", col="gold4")
plot(data$other, type="line", main="Other Causes", xlab="Time", ylab="Other Causes", col="cyan4")
#How did the different type of deaths measured in absolute values evolve in time?
data_plot_1 <- data.frame(
Time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes (absolute values)")
#How did the different type of deaths measured in rate values evolve in time?
data_plot_2 <- data.frame(
Time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
#How did the size of the army evolve in time?
data_plot_3 <- data.frame(
Time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#How did the accumulated number of deaths evolve in time?
data_plot_4 <- data.frame(
Time=data$time_period,
Accumulated_deaths=cum_deaths)
dygraph(data_plot_4, main="Accumulated number of deaths")
#We display the data that is more suitable for the graphs:
data_1year=data[1:12,]
data_2year=data[13:24,]
View(data_1year)
View(data_2year)
data1=data.frame(t(data_1year))
data1=data.frame(t(data_1year))
data2=data1[3:5,]
View(data2)
#data2.1=data1.1[3:5,]
prova <- data_1year[,3:5]
View(prova)
colnames(data2)=c("Apr 1854","May 1854","Jun 1854","Jul 1854","Aug 1854","Sep 1854","Oct 1854","Nov 1854","Dec 1854","Jan 1855","Feb 1855","Mar 1855","Apr 1855","May 1855","Jun 1855","Jul 1855","Aug 1855","Sep 1855","Oct 1855","Nov 1855","Dec 1855","Jan 1856","Feb 1856","Mar 1856")
data2=data1[3:5,]
colnames(data2)=c("Apr 1854","May 1854","Jun 1854","Jul 1854","Aug 1854","Sep 1854","Oct 1854","Nov 1854","Dec 1854","Jan 1855","Feb 1855","Mar 1855","Apr 1855","May 1855","Jun 1855","Jul 1855","Aug 1855","Sep 1855","Oct 1855","Nov 1855","Dec 1855","Jan 1856","Feb 1856","Mar 1856")
data1=data.frame(t(data_1year))
data1.1=data.frame(t(data_2year))
data2=data1[3:5,]
#data2.1=data1.1[3:5,]
prova <- data_1year[,3:5]
colnames(data2)=c("Apr 1854","May 1854","Jun 1854","Jul 1854","Aug 1854","Sep 1854","Oct 1854","Nov 1854","Dec 1854","Jan 1855","Feb 1855","Mar 1855","Apr 1855","May 1855","Jun 1855","Jul 1855","Aug 1855","Sep 1855","Oct 1855","Nov 1855","Dec 1855","Jan 1856","Feb 1856","Mar 1856")
colnames(data2)=c("Apr 1854","May 1854","Jun 1854","Jul 1854","Aug 1854","Sep 1854","Oct 1854","Nov 1854","Dec 1854","Jan 1855","Feb 1855","Mar 1855")
data2$group=row.names(data2)
colnames(data2.1)=month.abb
data2.1=data1.1[3:5,]
colnames(data2.1)=month.abb
data2.1$group=row.names(data2.1)
data3=melt(data2,id="data2")
data1=data.frame(t(data_1year))
data1.1=data.frame(t(data_2year))
data2.1=data1.1[3:5,]
prova <- data_1year[,3:5]
colnames(data2)=c("Apr 1854","May 1854","Jun 1854","Jul 1854","Aug 1854","Sep 1854","Oct 1854","Nov 1854","Dec 1854","Jan 1855","Feb 1855","Mar 1855")
data2$group=row.names(data2)
colnames(data2.1)=month.abb
data2.1$group=row.names(data2.1)
data3=melt(data2,id="data2")
data2 <- data.frame(
name=data$zymotic, data$injuries data$other,
data2 <- data.frame(
name=data$zymotic, data$injuries, data$other,
value=c("Apr 1854","May 1854","Jun 1854","Jul 1854","Aug 1854","Sep 1854","Oct 1854","Nov 1854","Dec 1854","Jan 1855","Feb 1855","Mar 1855","Apr 1855","May 1855","Jun 1855","Jul 1855","Aug 1855","Sep 1855","Oct 1855","Nov 1855","Dec 1855","Jan 1856","Feb 1856","Mar 1856")
)
# barplot
barplot( height=data2$value, names=data2$name , col="brown")
colnames(data2.1)=month.abb
data2.1$group=row.names(data2.1)
data3=melt(data2,id="data2")
data_1year=data[1:12,]
data_2year=data[13:24,]
# create a dataset
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
hello <- data.frame(specie,condition,value)
View(hello)
View(hello)
#Bar graph:
data2 <- data.frame(
name=data$zymotic, data$injuries, data$other,
value=c("Apr 1854","May 1854","Jun 1854","Jul 1854","Aug 1854","Sep 1854","Oct 1854","Nov 1854","Dec 1854","Jan 1855","Feb 1855","Mar 1855","Apr 1855","May 1855","Jun 1855","Jul 1855","Aug 1855","Sep 1855","Oct 1855","Nov 1855","Dec 1855","Jan 1856","Feb 1856","Mar 1856")
)
# barplot
barplot(height=data2$value, names=data2$name , col="brown")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
rm(list=ls())
#Libraries used:
library(readxl)
library(dplyr)
library(tidyverse)
library(gt)
library(dygraphs)
library(formattable)
library(xts)
library(lmtest)
library(tseries)
library(sandwich)
library(forecast)
library(ResourceSelection)
library(pROC)
library(reshape2)
#Importing dataset:
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
#Basic information:
head(data)
#Dimensions of the dataset:
dim(data)
#Variables:
sapply(data, class)
summary(data)
#Making everything more readable and column names more manageable:
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Checking missing values:
colSums(is.na(data))
#Checking outliers:
par(mfrow=c(1,3))
boxplot(data$injuries, col="lightgoldenrod", main="Deaths by injuries")
boxplot(data$zymotic, col="mistyrose", main="Deaths by zymotic disease")
boxplot(data$other, col="powderblue", main="Deaths by other causes")
data[17,1] <- "Aug 1855" #We modify this entry as in the original dataset it appeared as Aug_1855.
#Creating a numeric variable to account for time period:
L <- nrow(data)
time_period <- seq(0,(L-1)) #Changing from 1 to L
data$time_period <- time_period
data <- as.data.frame(data)
time_vars <- select(data, month, time_period)
time_vars %>%
gt() %>%
tab_header(title = md("**Time periods**"), subtitle = md("Equivalence between both variables"))
#Adding new variables to the dataset:
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Agreggated deaths (all causes) per month
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths over time
deaths_evol <- select(data, month, total_deaths, time_period)
ordered_deaths <- deaths_evol %>%
arrange(desc(deaths_evol$total_deaths)) #Months arranged from higher to lower number of deaths
#Visualizing in a colorful data table the changes performed:
table_deaths <- data.frame(
Month = ordered_deaths$month,
TotalDeaths = ordered_deaths$total_deaths,
TimePeriod = ordered_deaths$time_period)
formattable(table_deaths, list(
Month = color_tile("lightblue", "lightpink4"),
TotalDeaths = color_bar("grey")))
par(mfrow=c(2,2))
plot(data$avg_size_army, type="line", main="Average Size Army", xlab="Time", ylab="Average Size Army", col="azure4")
plot(data$zymotic, type="line", main="Zymotic Diseases", xlab="Time", ylab="Zymotic Diseases", col="firebrick4")
plot(data$injuries, type="line", main="Injuries", xlab="Time", ylab="Injuries", col="gold4")
plot(data$other, type="line", main="Other Causes", xlab="Time", ylab="Other Causes", col="cyan4")
ggplot(data, aes(x=time_period, y=zymotic))+
geom_bar(stat="identity", position="dodge", width=0.6, fill="steelblue4")+
xlab("Time period")+ylab("Deaths by zymotic diseases")
ggplot(data, aes(x=time_period, y=injuries))+
geom_bar(stat="identity", position="dodge", width=0.6, fill="hotpink4")+
xlab("Time period")+ylab("Deaths by wounds and injuries")
ggplot(data, aes(x=time_period, y=other))+
geom_bar(stat="identity", position="dodge", width=0.6, fill="darkorange")+
xlab("Time period")+ylab("Deaths by other causes")
#How did the different type of deaths measured in absolute values evolve in time?
data_plot_1 <- data.frame(
Time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes (absolute values)")
#How did the different type of deaths measured in rate values evolve in time?
data_plot_2 <- data.frame(
Time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
#How did the size of the army evolve in time?
data_plot_3 <- data.frame(
Time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#How did the accumulated number of deaths evolve in time?
data_plot_4 <- data.frame(
Time=data$time_period,
Accumulated_deaths=cum_deaths)
dygraph(data_plot_4, main="Accumulated number of deaths")
![Nightingale Rose Plot](./pictures/nightingale.png)
![Nightingale Rose Plot](./pictures/nightingale.png)
![Nightingale Rose Plot](./pictures/nightingale.png)
![Nightingale Rose Plot](.\pictures\nightingale.png)
![Nightingale Rose Plot](.\pictures\nightingale.png)
Florence Nightingale is famous for its polar graphs plot, then named Nightingale rose plots in her honor. The image below show the original plots made by her in 1856 with data collected during the Crimean War.
![Nightingale Rose Plot](./pictures/nightingale.jpg)
In this section, we are going to explore the dataset in a visual way to see the impacts some variables had on some others using a different approach than her own:
![Nightingale Rose Plot](./pictures/nightingale.jpg)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
rm(list=ls())
#Libraries used:
library(readxl)
library(dplyr)
library(tidyverse)
library(gt)
library(dygraphs)
library(formattable)
library(xts)
library(lmtest)
library(tseries)
library(sandwich)
library(forecast)
library(ResourceSelection)
library(pROC)
library(reshape2)
#Importing dataset:
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
#Basic information:
head(data)
#Dimensions of the dataset:
dim(data)
#Variables:
sapply(data, class)
summary(data)
#Making everything more readable and column names more manageable:
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Checking missing values:
colSums(is.na(data))
#Checking outliers:
par(mfrow=c(1,3))
boxplot(data$injuries, col="lightgoldenrod", main="Deaths by injuries")
boxplot(data$zymotic, col="mistyrose", main="Deaths by zymotic disease")
boxplot(data$other, col="powderblue", main="Deaths by other causes")
data[17,1] <- "Aug 1855" #We modify this entry as in the original dataset it appeared as Aug_1855.
#Creating a numeric variable to account for time period:
L <- nrow(data)
time_period <- seq(0,(L-1)) #Changing from 1 to L
data$time_period <- time_period
data <- as.data.frame(data)
time_vars <- select(data, month, time_period)
time_vars %>%
gt() %>%
tab_header(title = md("**Time periods**"), subtitle = md("Equivalence between both variables"))
#Adding new variables to the dataset:
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Agreggated deaths (all causes) per month
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths over time
deaths_evol <- select(data, month, total_deaths, time_period)
ordered_deaths <- deaths_evol %>%
arrange(desc(deaths_evol$total_deaths)) #Months arranged from higher to lower number of deaths
#Visualizing in a colorful data table the changes performed:
table_deaths <- data.frame(
Month = ordered_deaths$month,
TotalDeaths = ordered_deaths$total_deaths,
TimePeriod = ordered_deaths$time_period)
formattable(table_deaths, list(
Month = color_tile("lightblue", "lightpink4"),
TotalDeaths = color_bar("grey")))
par(mfrow=c(2,2))
plot(data$avg_size_army, type="line", main="Average Size Army", xlab="Time", ylab="Average Size Army", col="azure4")
plot(data$zymotic, type="line", main="Zymotic Diseases", xlab="Time", ylab="Zymotic Diseases", col="firebrick4")
plot(data$injuries, type="line", main="Injuries", xlab="Time", ylab="Injuries", col="gold4")
plot(data$other, type="line", main="Other Causes", xlab="Time", ylab="Other Causes", col="cyan4")
formattable(table_deaths, list(
Month = color_tile("lightblue"),
TotalDeaths = color_bar("grey")))
formattable(table_deaths, list(
#Month = color_tile("lightblue", "lightpink4"),
TotalDeaths = color_bar("grey")))
formattable(table_deaths, list(
TotalDeaths = color_bar("grey")))
formattable(table_deaths, list(
TotalDeaths = color_bar("lightgrey")))
