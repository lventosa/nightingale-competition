geom_line()
data_plot_3 <- data.frame(
time=data$time_period
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
rm(list=ls())
library(readxl)
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
library(dplyr)
L <- nrow(data)
time_period <- seq(0,(L-1))
data$time_period <- time_period
data <- as.data.frame(data)
#Cols 3-5: deaths
#Cols 6-8: annual mortality rate (per 1000)
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Plots
library(dygraphs)
library(xts) #Millor fer servir time_period però transformant la data amb xts() queda l'eix X amb dates al gràfic dinàmic
library(ggplot2)
data_plot_1 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes")
data_plot_2 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
plot(data$time_period, data$avg_size_army)
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#Aggregated deaths
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Morts totals en cada mes
#Cumulative deaths
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data_plot_4 <- data.frame(
time=data$time_period,
Accumulated_deaths=cum_deaths) #No m'acaba d'agradar el nom de la variable top-right. Millor data amb xts()?
dygraph(data_plot_4, main="Accumulated number of deaths")
library(readxl)
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
library(readxl)
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
library(dplyr)
L <- nrow(data)
time_period <- seq(0,(L-1))
data$time_period <- time_period
data <- as.data.frame(data)
#Cols 3-5: deaths
#Cols 6-8: annual mortality rate (per 1000)
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Plots
library(dygraphs)
library(xts) #Millor fer servir time_period però transformant la data amb xts() queda l'eix X amb dates al gràfic dinàmic
library(ggplot2)
data_plot_1 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes")
data_plot_2 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
plot(data$time_period, data$avg_size_army)
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#Aggregated deaths
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Morts totals en cada mes
#Cumulative deaths
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths
data_plot_4 <- data.frame(
time=data$time_period,
Accumulated_deaths=cum_deaths) #No m'acaba d'agradar el nom de la variable top-right. Millor data amb xts()?
dygraph(data_plot_4, main="Accumulated number of deaths")
#Regressions
library(lmtest)
tra_death <- data.frame(y=data$total_deaths[2:L], lag1=data$total_deaths[1:(L-1)])
reg1 <- lm(y ~ lag1, data=tra_death) #Regressió morts avui en funció de les morts d'ahir
summary(reg1)
#Prediccions
T <- 5
future.periods <- seq((L+1),(L+T))
pred <- forecast(reg1, newdata=future.periods)
install.packages("tseries")
library(tseries)
future.periods <- seq((L+1),(L+T))
pred <- forecast(reg1, newdata=future.periods)
pred <- predict(reg1, newdata=future.periods)
pred <- predict(reg1, future.periods)
future_dates <-
pred <- predict(reg1, interval="prediction")
future.periods <- seq((L+1),(L+T))
pred <- predict(reg1, interval="prediction")
View(pred)
View(data)
#Accuracy de reg1 per fer prediccions
trainrows <- sample(rownames(data), dim(data)[1]*0.7)
traindata <- ames[trainrows, ]
testrows <- sample(rownames(data), dim(data)[1]*0.3)
testdata <- ames[testrows, ]
#Accuracy de reg1 per fer prediccions
trainrows <- subset(rownames(data), dim(data)[1]*0.7)
traindata <- data[trainrows, ]
#Accuracy de reg1 per fer prediccions
trainrows <- subset(data, time_period>19)
#Accuracy de reg1 per fer prediccions
trainrows <- subset(data, time_period>int(0.7*L))
#Accuracy de reg1 per fer prediccions
trainrows <- subset(data, time_period>round(0.7*L))
traindata <- data[trainrows, ]
#Accuracy de reg1 per fer prediccions
trainrows <- subset(data, time_period>=round(0.7*L))
testrows <- subset(data, time_period<round(0.7*L))
testdata <- data[testrows, ]
View(traindata)
rm(list=ls())
library(readxl)
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
library(dplyr)
L <- nrow(data)
time_period <- seq(0,(L-1)) #Podríem passar-ho de 1 a L
data$time_period <- time_period
data <- as.data.frame(data)
#Cols 3-5: deaths
#Cols 6-8: annual mortality rate (per 1000)
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Plots
library(dygraphs)
library(xts) #Millor fer servir time_period però transformant la data amb xts() queda l'eix X amb dates al gràfic dinàmic
library(ggplot2)
data_plot_1 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes")
data_plot_2 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
plot(data$time_period, data$avg_size_army)
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#Aggregated deaths
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Morts totals en cada mes
#Cumulative deaths
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths
data_plot_4 <- data.frame(
time=data$time_period,
Accumulated_deaths=cum_deaths) #No m'acaba d'agradar el nom de la variable top-right. Millor data amb xts()?
dygraph(data_plot_4, main="Accumulated number of deaths")
#Regressions
library(lmtest)
tra_death <- data.frame(y=data$total_deaths[2:L], lag1=data$total_deaths[1:(L-1)])
reg1 <- lm(y ~ lag1, data=tra_death) #Regressió morts avui en funció de les morts d'ahir
summary(reg1)
#Accuracy de reg1 per fer prediccions
trainrows <- subset(data, time_period>=round(0.7*L))
traindata <- data[trainrows, ]
testrows <- subset(data, time_period<round(0.7*L))
testdata <- data[testrows, ]
#Accuracy de reg1 per fer prediccions
trainrows <- subset(data, time_period>=round(0.7*L))
traindata <- data[trainrows, ]
testrows <- subset(data, time_period<round(0.7*L))
View(testrows)
#Accuracy de reg1 per fer prediccions
traindata <- subset(data, time_period<=round(0.7*L))
testdata <- subset(data, time_period>round(0.7*L))
View(traindata)
#Accuracy de reg1 per fer prediccions
train_data <- subset(data, time_period<=round(0.7*L))
test_data <- subset(data, time_period>round(0.7*L))
View(train_data)
View(testdata)
model1 <- lm(y ~ lag1, data=train_data)
train1 <- data.frame(y=train_data$total_deaths[2:L], lag1=train_data$total_deaths[1:(L-1)])
model1 <- lm(y ~ lag1, data=train_data)
model1 <- lm(y ~ lag1, data=train_data)
y.hat1 <- predict(model1, data=test_data)
model1 <- lm(y ~ lag1, data=train_data)
train1 <- data.frame(y=train_data$total_deaths[2:L], lag1=train_data$total_deaths[1:(L-1)])
model1 <- lm(y ~ lag1, data=train_data)
model1 <- lm(y ~ lag1, data=train1)
y.hat1 <- predict(model1, data=test_data)
training1 <- data.frame(y=train_data$total_deaths[2:L], lag1=train_data$total_deaths[1:(L-1)])
model1 <- lm(y ~ lag1, data=train1)
model1 <- lm(y ~ lag1, data=training1)
y.hat1 <- predict(model1, data=test_data)
rm(list=ls())
library(readxl)
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
library(dplyr)
L <- nrow(data)
time_period <- seq(0,(L-1)) #Podríem passar-ho de 1 a L
data$time_period <- time_period
data <- as.data.frame(data)
#Cols 3-5: deaths
#Cols 6-8: annual mortality rate (per 1000)
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Plots
library(dygraphs)
library(xts) #Millor fer servir time_period però transformant la data amb xts() queda l'eix X amb dates al gràfic dinàmic
library(ggplot2)
data_plot_1 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes")
data_plot_2 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
plot(data$time_period, data$avg_size_army)
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#Aggregated deaths
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Morts totals en cada mes
#Cumulative deaths
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths
data_plot_4 <- data.frame(
time=data$time_period,
Accumulated_deaths=cum_deaths) #No m'acaba d'agradar el nom de la variable top-right. Millor data amb xts()?
dygraph(data_plot_4, main="Accumulated number of deaths")
#Regressions
library(lmtest)
tra_death <- data.frame(y=data$total_deaths[2:L], lag1=data$total_deaths[1:(L-1)])
reg1 <- lm(y ~ lag1, data=tra_death) #Regressió morts avui en funció de les morts d'ahir
summary(reg1)
#Accuracy de reg1 per fer prediccions
train_data <- subset(data, time_period<=round(0.7*L)) #70% training data
test_data <- subset(data, time_period>round(0.7*L)) #30% test/validation data
training1 <- data.frame(y=train_data$total_deaths[2:L], lag1=train_data$total_deaths[1:(L-1)])
model1 <- lm(y ~ lag1, data=training1)
y.hat1 <- predict(model1, data=test_data)
#Prediccions
T <- 5
future.periods <- seq((L+1),(L+T))
future_dates <-
pred <- predict(reg1, newdata=future_dates, interval="prediction")
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
error <- abs(y.hat - test_data$total_deaths)
error <- abs(y.hat1 - test_data$total_deaths)
#Accuracy de reg1 per fer prediccions
train_data <- subset(data, time_period<=round(0.7*L)) #70% training data
test_data <- subset(data, time_period>round(0.7*L)) #30% test/validation data
training1 <- data.frame(y=train_data$total_deaths[2:L], lag1=train_data$total_deaths[1:(L-1)])
model1 <- lm(y ~ lag1, data=training1)
y.hat1 <- predict(model1, data=test_data)
error <- abs(y.hat1 - test_data$total_deaths)
training1 <- data.frame(y=train_data$total_deaths, lag1=train_data$total_deaths)
model1 <- lm(y ~ lag1, data=training1)
y.hat1 <- predict(model1, data=test_data)
error <- abs(y.hat1 - test_data$total_deaths)
error1 <- abs(y.hat1 - test_data$total_deaths)
rmse1 <- sqrt((cumsum(error1)**2)/nrows(test_data))
rmse1 <- sqrt((cumsum(error1)**2)/nrow(test_data))
rmse1 <- sqrt((sum(error1)**2)/nrow(test_data))
y.hat1
model1 <- lm(y ~ lag1, data=test_data)
View(data)
library(readxl)
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
library(dplyr)
L <- nrow(data)
time_period <- seq(0,(L-1)) #Podríem passar-ho de 1 a L
data$time_period <- time_period
data <- as.data.frame(data)
str(data)
data <- as.data.frame(data)
#Cols 3-5: deaths
#Cols 6-8: annual mortality rate (per 1000)
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Plots
library(dygraphs)
library(xts) #Millor fer servir time_period però transformant la data amb xts() queda l'eix X amb dates al gràfic dinàmic
library(ggplot2)
data_plot_1 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes")
data_plot_2 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#Aggregated deaths
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Morts totals en cada mes
#Cumulative deaths
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths
data_plot_4 <- data.frame(
time=data$time_period,
Accumulated_deaths=cum_deaths) #No m'acaba d'agradar el nom de la variable top-right. Millor data amb xts()?
dygraph(data_plot_4, main="Accumulated number of deaths")
#Regressions
library(lmtest)
tra_death <- data.frame(y=data$total_deaths[2:L], lag1=data$total_deaths[1:(L-1)])
reg1 <- lm(y ~ lag1, data=tra_death) #Regressió morts avui en funció de les morts d'ahir
summary(reg1)
#Accuracy de reg1 per fer prediccions (he provat de fer la del número de morts basant-me només en un lag d'aquesta mateixa variable per provar de fer-ne alguna)
train_data <- subset(data, time_period<=round(0.7*L)) #70% training data
test_data <- subset(data, time_period>round(0.7*L)) #30% test/validation data
training1 <- data.frame(y=train_data$total_deaths, lag1=train_data$total_deaths)
model1 <- lm(y ~ lag1, data=training1)
y.hat1 <- predict(model1, data=test_data)
error1 <- abs(y.hat1 - test_data$total_deaths)
rmse1 <- sqrt((sum(error1)**2)/nrow(test_data))
#Prediccions
T <- 5
future.periods <- seq((L+1),(L+T))
future_dates <-
pred <- predict(reg1, newdata=future_dates, interval="prediction")
#Correlacions
corr(data$avg_size_army, data$zymotic)
#Correlacions
cor(data$avg_size_army, data$zymotic)
cor(data$avg_size_army, data$injuries)
cor(data$avg_size_army, data$other)
View(data)
print("Hi ha algun/s valor/s NA")
for (i in 1:length(data)){
for (i in 1:nrow(data)){
if(is.na==TRUE){
print("Hi ha algun/s valor/s NA")
}
}
}
rm(list=ls())
library(readxl)
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
str(data)
library(dplyr)
L <- nrow(data)
time_period <- seq(0,(L-1)) #Podríem passar-ho de 1 a L
data$time_period <- time_period
data <- as.data.frame(data)
#Cols 3-5: deaths
#Cols 6-8: annual mortality rate (per 1000)
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
for (i in 1:length(data)){
for (i in 1:nrow(data)){
if(is.na==TRUE){
print("Hi ha algun/s valor/s NA")
}
}
}
#Plots
library(dygraphs)
library(xts) #Millor fer servir time_period però transformant la data amb xts() queda l'eix X amb dates al gràfic dinàmic
library(ggplot2)
data_plot_1 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes")
data_plot_2 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
dygraph(data_plot_1, main="Death causes (absolute values)")
data_plot_2 <- data.frame(
time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
data_plot_3 <- data.frame(
time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
library(readxl)
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
str(data)
library(dplyr)
L <- nrow(data)
mutate(time_period, seq(0,(L-1)))
data %>%
mutate(time_period, seq(0,(L-1)))
data %>%
mutate(time_period = seq(0,(L-1)))
View(data)
data %>%
mutate(time_period = seq(0,(L-1)))
data %>%
mutate(time_period = seq(0,(L-1)))
L <- nrow(data)
time_period <- seq(0,(L-1)) #Podríem passar-ho de 1 a L
data$time_period <- time_period
data <- as.data.frame(data)
#Cols 3-5: deaths
#Cols 6-8: annual mortality rate (per 1000)
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
