geom_tile(colour="black",size=0.1)+
scale_fill_gradientn(colours=c("white","deepskyblue3"))+
coord_polar()+xlab("")+ylab("")
#Regression and residuals values calculations of average size army vs zymotic disease:
cor(data$avg_size_army, data$zymotic)
reg1 <- lm(avg_size_army ~ zymotic, data=data)
coeftest(reg1, NeweyWest(reg1))
#HAC heteroskedasticity autocorrelation robust std errors
#Correlation with Newey-West to have into account the autocorrelation:
#Residuals calculation:
resid1 <- as.numeric(reg1$residuals)
adjusted.values1 <- fitted(reg1)
plot(adjusted.values1, resid1, main="Residual plot Model 1", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid1, col="tomato", main="Quantile-Comparison Plot Model 1")
qqline(resid1, lwd=2, lty=3)
shapiro.test(resid1)
#Regression and residuals values calculations of average size army vs injuries:
cor(data$avg_size_army, data$injuries)
reg2 <- lm(avg_size_army ~ injuries, data=data)
summary(reg2)
coeftest(reg2, NeweyWest(reg2))
resid2 <- as.numeric(reg2$residuals)
adjusted.values2 <- fitted(reg2)
plot(adjusted.values2, resid2, main="Residual plot Model 2", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid2, col="tomato", main="Quantile-Comparison Plot Model 2")
qqline(resid2, lwd=2, lty=3)
shapiro.test(resid2)
#Regression and residuals values calculations of average size army vs zymotic disease:
cor(data$avg_size_army, data$zymotic)
reg1 <- lm(avg_size_army ~ zymotic, data=data)
coeftest(reg1, NeweyWest(reg1))
#HAC heteroskedasticity autocorrelation robust std errors
#Correlation with Newey-West to have into account the autocorrelation:
#Residuals calculation:
resid1 <- as.numeric(reg1$residuals)
adjusted.values1 <- fitted(reg1)
plot(adjusted.values1, resid1, main="Residual plot Model 1", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid1, col="tomato", main="Quantile-Comparison Plot Model 1")
qqline(resid1, lwd=2, lty=3)
shapiro.test(resid1)
#Regression and residuals values calculations of average size army vs zymotic disease:
cor(data$avg_size_army, data$zymotic)
reg1 <- lm(avg_size_army ~ zymotic, data=data)
coeftest(reg1, NeweyWest(reg1))
#HAC heteroskedasticity autocorrelation robust std errors
#Correlation with Newey-West to have into account the autocorrelation:
#Residuals calculation:
resid1 <- as.numeric(reg1$residuals)
adjusted.values1 <- fitted(reg1)
plot(adjusted.values1, resid1, main="Residual plot Model 1", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid1, col="tomato", main="Quantile-Comparison Plot Model 1")
qqline(resid1, lwd=2, lty=3)
shapiro.test(resid1)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
rm(list=ls())
#Libraries used across the whole project:
library(readxl)
library(dplyr)
library(tidyverse)
library(gt)
library(dygraphs)
library(formattable)
library(xts)
library(lmtest)
library(tseries)
library(sandwich)
library(forecast)
library(ResourceSelection)
library(pROC)
library(reshape2)
#Importing dataset:
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
#Basic information:
head(data)
#Dimensions of the dataset:
dim(data)
#Variables:
sapply(data, class)
summary(data)
#Making everything more readable and column names more manageable:
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Checking missing values:
colSums(is.na(data))
#Checking outliers:
par(mfrow=c(1,3))
boxplot(data$injuries, col="lightgoldenrod", main="Deaths by injuries")
boxplot(data$zymotic, col="mistyrose", main="Deaths by zymotic disease")
boxplot(data$other, col="powderblue", main="Deaths by other causes")
data[17,1] <- "Aug 1855" #We modify this entry as in the original dataset it appeared as Aug_1855.
#Creating a numeric variable to account for time period:
L <- nrow(data)
time_period <- seq(0,(L-1)) #Changing from 1 to L
data$time_period <- time_period
data <- as.data.frame(data)
time_vars <- select(data, month, time_period)
time_vars %>%
gt() %>%
tab_header(title = md("**Time periods**"), subtitle = md("Equivalence between both variables"))
#Adding new variables to the dataset:
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Agreggated deaths (all causes) per month
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths over time
deaths_evol <- select(data, month, total_deaths, time_period)
ordered_deaths <- deaths_evol %>%
arrange(desc(deaths_evol$total_deaths)) #Months arranged from higher to lower number of deaths
#Visualizing in a colorful data table the changes performed:
table_deaths <- data.frame(
Month = ordered_deaths$month,
TotalDeaths = ordered_deaths$total_deaths,
TimePeriod = ordered_deaths$time_period)
formattable(table_deaths, list(
Month = color_tile("lightblue", "lightpink4"),
TotalDeaths = color_bar("grey")))
par(mfrow=c(2,2))
plot(data$avg_size_army, type="line", main="Average Size Army", xlab="Time", ylab="Average Size Army", col="azure4")
plot(data$zymotic, type="line", main="Zymotic Diseases", xlab="Time", ylab="Zymotic Diseases", col="firebrick4")
plot(data$injuries, type="line", main="Injuries", xlab="Time", ylab="Injuries", col="gold4")
plot(data$other, type="line", main="Other Causes", xlab="Time", ylab="Other Causes", col="cyan4")
#How did the different type of deaths measured in absolute values evolve in time?
data_plot_1 <- data.frame(
Time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes (absolute values)")
#How did the different type of deaths measured in rate values evolve in time?
data_plot_2 <- data.frame(
Time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
#How did the size of the army evolve in time?
data_plot_3 <- data.frame(
Time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#How did the accumulated number of deaths evolve in time?
data_plot_4 <- data.frame(
Time=data$time_period,
Accumulated_deaths=cum_deaths)
dygraph(data_plot_4, main="Accumulated number of deaths")
#We display the data that is more suitable for the graphs:
data=data[1:12,]
data1=data.frame(t(data))
data2=data1[3:5,]
colnames(data2)=month.abb
data2$group=row.names(data2)
data3=melt(data2,id="group")
data3$value=as.numeric(data3$value)
head(data3)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
rm(list=ls())
#Libraries used across the whole project:
library(readxl)
library(dplyr)
library(tidyverse)
library(gt)
library(dygraphs)
library(formattable)
library(xts)
library(lmtest)
library(tseries)
library(sandwich)
library(forecast)
library(ResourceSelection)
library(pROC)
library(reshape2)
#Importing dataset:
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
#Basic information:
head(data)
#Dimensions of the dataset:
dim(data)
#Variables:
sapply(data, class)
summary(data)
#Making everything more readable and column names more manageable:
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Checking missing values:
colSums(is.na(data))
#Checking outliers:
par(mfrow=c(1,3))
boxplot(data$injuries, col="lightgoldenrod", main="Deaths by injuries")
boxplot(data$zymotic, col="mistyrose", main="Deaths by zymotic disease")
boxplot(data$other, col="powderblue", main="Deaths by other causes")
data[17,1] <- "Aug 1855" #We modify this entry as in the original dataset it appeared as Aug_1855.
#Creating a numeric variable to account for time period:
L <- nrow(data)
time_period <- seq(0,(L-1)) #Changing from 1 to L
data$time_period <- time_period
data <- as.data.frame(data)
time_vars <- select(data, month, time_period)
time_vars %>%
gt() %>%
tab_header(title = md("**Time periods**"), subtitle = md("Equivalence between both variables"))
#Adding new variables to the dataset:
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Agreggated deaths (all causes) per month
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths over time
deaths_evol <- select(data, month, total_deaths, time_period)
ordered_deaths <- deaths_evol %>%
arrange(desc(deaths_evol$total_deaths)) #Months arranged from higher to lower number of deaths
#Visualizing in a colorful data table the changes performed:
table_deaths <- data.frame(
Month = ordered_deaths$month,
TotalDeaths = ordered_deaths$total_deaths,
TimePeriod = ordered_deaths$time_period)
formattable(table_deaths, list(
Month = color_tile("lightblue", "lightpink4"),
TotalDeaths = color_bar("grey")))
par(mfrow=c(2,2))
plot(data$avg_size_army, type="line", main="Average Size Army", xlab="Time", ylab="Average Size Army", col="azure4")
plot(data$zymotic, type="line", main="Zymotic Diseases", xlab="Time", ylab="Zymotic Diseases", col="firebrick4")
plot(data$injuries, type="line", main="Injuries", xlab="Time", ylab="Injuries", col="gold4")
plot(data$other, type="line", main="Other Causes", xlab="Time", ylab="Other Causes", col="cyan4")
#How did the different type of deaths measured in absolute values evolve in time?
data_plot_1 <- data.frame(
Time=data$time_period,
Zymotic=data$zymotic,
Injuries=data$injuries,
Other=data$other)
dygraph(data_plot_1, main="Death causes (absolute values)")
#How did the different type of deaths measured in rate values evolve in time?
data_plot_2 <- data.frame(
Time=data$time_period,
Zymotic=data$zymotic_rate,
Injuries=data$injuries_rate,
Other=data$other_rate)
dygraph(data_plot_2, main="Death causes (rates)")
#How did the size of the army evolve in time?
data_plot_3 <- data.frame(
Time=data$time_period,
Army=data$avg_size_army)
dygraph(data_plot_3, main="Average size of the army")
#Regression and residuals values calculations of average size army vs zymotic disease:
cor(data$avg_size_army, data$zymotic)
reg1 <- lm(avg_size_army ~ zymotic, data=data)
coeftest(reg1, NeweyWest(reg1))
#HAC heteroskedasticity autocorrelation robust std errors
#Correlation with Newey-West to have into account the autocorrelation:
#Residuals calculation:
resid1 <- as.numeric(reg1$residuals)
adjusted.values1 <- fitted(reg1)
plot(adjusted.values1, resid1, main="Residual plot Model 1", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid1, col="tomato", main="Quantile-Comparison Plot Model 1")
qqline(resid1, lwd=2, lty=3)
shapiro.test(resid1)
shapiro.test(resid1)
#Regression and residuals values calculations of average size army vs injuries:
cor(data$avg_size_army, data$injuries)
reg2 <- lm(avg_size_army ~ injuries, data=data)
summary(reg2)
coeftest(reg2, NeweyWest(reg2))
resid2 <- as.numeric(reg2$residuals)
adjusted.values2 <- fitted(reg2)
plot(adjusted.values2, resid2, main="Residual plot Model 2", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid2, col="tomato", main="Quantile-Comparison Plot Model 2")
qqline(resid2, lwd=2, lty=3)
shapiro.test(resid2)
shapiro.test(resid2)
#Regression and residuals values calculations of average size army vs other disease:
cor(data$avg_size_army, data$other)
reg3 <- lm(avg_size_army ~ other, data=data)
summary(reg3)
coeftest(reg3, NeweyWest(reg3))
resid3 <- as.numeric(reg3$residuals)
adjusted.values3 <- fitted(reg3)
plot(adjusted.values3, resid3, main="Residual plot Model 3", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid3, col="tomato", main="Quantile-Comparison Plot Model 3")
qqline(resid3, lwd=2, lty=3)
shapiro.test(resid3)
shapiro.test(resid3)
#Multivariant linear regresion between all deaths (segregated) and the average size of army:
reg4 <- lm(avg_size_army ~ data$zymotic+data$injuries+data$other, data=data)
summary(reg4)
coeftest(reg4, NeweyWest(reg4))
#Comentem que totes son negatives excepte una. Les morts d'aquesta causa van fer que reclutessin més soldats?
resid4 <- as.numeric(reg4$residuals)
adjusted.values4 <- fitted(reg4)
plot(adjusted.values4, resid4, main="Residual plot Model 4", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid4, col="tomato", main="Quantile-Comparison Plot Model 4")
qqline(resid4, lwd=2, lty=3)
shapiro.test(resid4)
shapiro.test(resid4)
cor(data$avg_size_army, data$total_deaths) #Valor absolut entre 0 i 1? Com més properes a 1 en valor absolut més correlacionades estan.
reg5 <- lm(avg_size_army ~ total_deaths, data=data)
summary(reg5)
coeftest(reg5, NeweyWest(reg5))
resid5 <- as.numeric(reg5$residuals)
adjusted.values5 <- fitted(reg5)
plot(adjusted.values5, resid5, main="Residual plot Model 5", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid5, col="tomato", main="Quantile-Comparison Plot Model 5")
qqline(resid5, lwd=2, lty=3)
shapiro.test(resid5)
shapiro.test(resid5)
cor(data$zymotic, data$time_period)
reg6 <- lm(zymotic ~ time_period, data=data)
summary(reg6)
coeftest(reg6, NeweyWest(reg6))
resid6 <- as.numeric(reg6$residuals)
adjusted.values6 <- fitted(reg6)
plot(adjusted.values6, resid6, main="Residual plot Model 6", ylab="Residual Values", xlab="Adjusted Values", col="lightsalmon3", abline(0, 0), pch=19)
qqnorm(resid6, col="tomato", main="Quantile-Comparison Plot Model 6")
qqline(resid6, lwd=2, lty=3)
shapiro.test(resid6)
shapiro.test(resid6)
Some of the regression models performed below will not appear in the final HTML report as some of them have regressors that are far from being significant and the residuals after fitting the model are not normally distributed. Hence, below are presented different regression models we thought were worth running and investigating even though some yield non satisfactory results.
#Some of the regression models performed below will not appear in the final HTML report as some of them have regressors that are far from being significant and the residuals after fitting the model are not normally distributed. Hence, below are presented different regression models we thought were worth running and investigating even though some yield non satisfactory results.
#Importing dataset:
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
View(data)
par(mfrow=c(2,2))
plot(data$avg_size_army, type="line", main="Average Size Army", xlab="Time", ylab="Average Size Army", col="azure4")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
rm(list=ls())
#Libraries used across the whole project:
library(readxl)
library(dplyr)
library(tidyverse)
library(gt)
library(dygraphs)
library(formattable)
library(xts)
library(lmtest)
library(tseries)
library(sandwich)
library(forecast)
library(ResourceSelection)
library(pROC)
library(reshape2)
#Importing dataset:
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
#Basic information:
head(data)
#Dimensions of the dataset:
dim(data)
#Variables:
sapply(data, class)
summary(data)
#Making everything more readable and column names more manageable:
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Checking missing values:
colSums(is.na(data))
#Checking outliers:
par(mfrow=c(1,3))
boxplot(data$injuries, col="lightgoldenrod", main="Deaths by injuries")
boxplot(data$zymotic, col="mistyrose", main="Deaths by zymotic disease")
boxplot(data$other, col="powderblue", main="Deaths by other causes")
data[17,1] <- "Aug 1855" #We modify this entry as in the original dataset it appeared as Aug_1855.
#Creating a numeric variable to account for time period:
L <- nrow(data)
time_period <- seq(0,(L-1)) #Changing from 1 to L
data$time_period <- time_period
data <- as.data.frame(data)
time_vars <- select(data, month, time_period)
time_vars %>%
gt() %>%
tab_header(title = md("**Time periods**"), subtitle = md("Equivalence between both variables"))
#Adding new variables to the dataset:
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Agreggated deaths (all causes) per month
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths over time
deaths_evol <- select(data, month, total_deaths, time_period)
ordered_deaths <- deaths_evol %>%
arrange(desc(deaths_evol$total_deaths)) #Months arranged from higher to lower number of deaths
#Visualizing in a colorful data table the changes performed:
table_deaths <- data.frame(
Month = ordered_deaths$month,
TotalDeaths = ordered_deaths$total_deaths,
TimePeriod = ordered_deaths$time_period)
formattable(table_deaths, list(
Month = color_tile("lightblue", "lightpink4"),
TotalDeaths = color_bar("grey")))
par(mfrow=c(2,2))
plot(data$avg_size_army, type="line", main="Average Size Army", xlab="Time", ylab="Average Size Army", col="azure4")
plot(data$zymotic, type="line", main="Zymotic Diseases", xlab="Time", ylab="Zymotic Diseases", col="firebrick4")
plot(data$injuries, type="line", main="Injuries", xlab="Time", ylab="Injuries", col="gold4")
plot(data$other, type="line", main="Other Causes", xlab="Time", ylab="Other Causes", col="cyan4")
#The series depicted does not seem very stationary. Nonetheless, we counduct a Dickey-Fuller test.
adf.test(data$total_deaths)
total_deaths_diff <- diff(data$total_deaths)
adf.test(total_deaths_diff)
#Checking how many lags we should include:
acf(total_deaths_diff2, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Autocorrelation function total deaths")
total_deaths_diff2 <- diff(total_deaths_diff)
adf.test(total_deaths_diff2)
#Checking how many lags we should include:
acf(total_deaths_diff2, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Autocorrelation function total deaths")
pacf(total_deaths_diff2, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Parcial autocorrelation function total deaths")
#Checking how many lags we should include:
acf(total_deaths_diff2, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Autocorrelation function total deaths")
#None of the lags are significant so, even though after differencing our data twice, it does not make sense to construct an ARIMA model. As the data differenced only once is almost stationary, we can check if it would make mmore sense to construct an ARIMA model in such case:
acf(total_deaths_diff, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Autocorrelation function total deaths")
pacf(total_deaths_diff, ylim=c(-0.2,1), lwd=5, xlim=c(0,15), col="darkorange2", main="Parcial autocorrelation function total deaths")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
rm(list=ls())
#Libraries used across the whole project:
library(readxl)
library(dplyr)
library(tidyverse)
library(gt)
library(dygraphs)
library(formattable)
library(xts)
library(lmtest)
library(tseries)
library(sandwich)
library(forecast)
library(ResourceSelection)
library(pROC)
library(reshape2)
#Importing dataset:
data <- read_excel("../nightingale-competition/datos_florence.xlsx", skip=1)
#Basic information:
head(data)
#Dimensions of the dataset:
dim(data)
#Variables:
sapply(data, class)
summary(data)
#Making everything more readable and column names more manageable:
colnames(data)[1] <- "month"
colnames(data)[2] <- "avg_size_army"
colnames(data)[3] <- "zymotic"
colnames(data)[4] <- "injuries"
colnames(data)[5] <- "other"
colnames(data)[6] <- "zymotic_rate"
colnames(data)[7] <- "injuries_rate"
colnames(data)[8] <- "other_rate"
#Checking missing values:
colSums(is.na(data))
#Checking outliers:
par(mfrow=c(1,3))
boxplot(data$injuries, col="lightgoldenrod", main="Deaths by injuries")
boxplot(data$zymotic, col="mistyrose", main="Deaths by zymotic disease")
boxplot(data$other, col="powderblue", main="Deaths by other causes")
data[17,1] <- "Aug 1855" #We modify this entry as in the original dataset it appeared as Aug_1855.
#Creating a numeric variable to account for time period:
L <- nrow(data)
time_period <- seq(0,(L-1)) #Changing from 1 to L
data$time_period <- time_period
data <- as.data.frame(data)
time_vars <- select(data, month, time_period)
time_vars %>%
gt() %>%
tab_header(title = md("**Time periods**"), subtitle = md("Equivalence between both variables"))
#Adding new variables to the dataset:
deaths <- vector()
for(i in 1:L){
deaths[i] <- data$zymotic[i] + data$injuries[i] + data$other[i]
}
data$total_deaths <- deaths #Agreggated deaths (all causes) per month
cum_deaths <- vector()
cum_deaths <- cumsum(deaths)
data$cum_deaths <- cum_deaths #Cumulative deaths over time
deaths_evol <- select(data, month, total_deaths, time_period)
ordered_deaths <- deaths_evol %>%
arrange(desc(deaths_evol$total_deaths)) #Months arranged from higher to lower number of deaths
#Visualizing in a colorful data table the changes performed:
table_deaths <- data.frame(
Month = ordered_deaths$month,
TotalDeaths = ordered_deaths$total_deaths,
TimePeriod = ordered_deaths$time_period)
formattable(table_deaths, list(
Month = color_tile("lightblue", "lightpink4"),
TotalDeaths = color_bar("grey")))
par(mfrow=c(2,2))
plot(data$avg_size_army, type="line", main="Average Size Army", xlab="Time", ylab="Average Size Army", col="azure4")
plot(data$zymotic, type="line", main="Zymotic Diseases", xlab="Time", ylab="Zymotic Diseases", col="firebrick4")
plot(data$injuries, type="line", main="Injuries", xlab="Time", ylab="Injuries", col="gold4")
plot(data$other, type="line", main="Other Causes", xlab="Time", ylab="Other Causes", col="cyan4")
reg1 <- lm(avg_size_army ~ zymotic, data=data)
coeftest(reg1, NeweyWest(reg1))
reg1 <- lm(avg_size_army ~ zymotic, data=data)
coeftest(reg1, NeweyWest(reg1))
